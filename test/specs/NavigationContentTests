describe('Settings page funtionality', () => {
  before(async() => {
    //await driver.back(); we will go back if i dont see main page and no login page
    // should make sure i am in main page
  });

  it('navigate to settings page', async () => {
    const settingsButton = await $('xpath://*[contains(@content-desc, "settings")]'); // settings have no accesability id at least i cannot find it with release build
    await settingsButton.click();
    
    const settingsTitle = await $('~settingsMainViewTestID'); // enlgish and has no : bedfore TestID
    await settingsTitle.waitForDisplayed({ timeout: 100 }); 
    
    expect(await settingsTitle.isDisplayed()).to.be.true;
  });

  it('check if settings page has all the content', async () => {
    //TODO:: add all buttons
    const languageChangeButton = await $('~Kalbos pasirinkimas:TestID'); // lithuanian and has :
    const moreSettingsButton = await $('~Kiti nustatymai:TestID');
    const aboutButton = await $('~Apie:TestID');
    
    expect(await languageChangeButton.isDisplayed()).to.be.true;
    expect(await moreSettingsButton.isDisplayed()).to.be.true;
    expect(await aboutButton.isDisplayed()).to.be.true;
  });
  // i would continue this to check every page but it would not be different from examples above so i wont
  it('navigate back to main screen', async () => {
    const aboutButton = await $('~Navigate up'); // accesability id english and no : or testID
    await aboutButton.click();
  });

  // good place to check for correct version but that would require access to the git to check what is the newest version
});